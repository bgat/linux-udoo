/*
 * Copyright 2013 Freescale Semiconductor, Inc.
 * Copyright (C) 2014 Jasbir
 * Copyright 2015 Aidilab, Srl.
 *
 * Author: Fabio Estevam <fabio.estevam@freescale.com>
 * Author: Ettore Chimenti <ettore.chimenti@udoo.org>
 * Author: Francesco Montefoschi <francesco.monte@gmail.com> 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */

/ {
	aliases {
		mxcfb0 = &mxcfb1;
		mmc0 = &usdhc3;
		mmc1 = &usdhc2;
		mmc2 = &usdhc1;
		mmc3 = &usdhc4;
	};
	
	memory {
		reg = <0x10000000 0x40000000>;
	};
	
	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;
		
		reg_usb_h1_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_h1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			enable-active-high;
			startup-delay-us = <2>; /* USB2415 requires a POR of 1 us minimum */
			gpio = <&gpio7 12 0>;
		};
		
		reg_lcd0_pwr: regulator@1 {
			compatible = "regulator-fixed", "udoo,lvds-power";
			regulator-name = "LCD0 POWER";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio1 2 0>;
			enable-active-high;
			regulator-boot-on;
			regulator-always-on;
			status = "disabled";
		};

		reg_usb_otg_vbus: regulator@4 {
			compatible = "regulator-fixed";
			reg = <4>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			enable-active-high;
		};
		
		reg_2p5v: regulator@5 {
			compatible = "regulator-fixed";
			reg = <5>;
			regulator-name = "2P5V";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <2500000>;
			regulator-always-on;
		};
	};
	
	codec: vt1613 {
		compatible = "via,vt1613";
	};

	backlight_lcd {// enable, disable lvds
		compatible = "gpio-backlight", "udoo,lvds-backlight";
		gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
		default-on;
		status = "disabled";
	};
	
	sound {
		compatible = "udoo,imx-vt1613-audio";
		ssi-controller = <&ssi1>; 
		audio-codec = <&codec>;
		mux-int-port = <1>; 
		mux-ext-port = <6>; 
	};
	
	sound-hdmi {
		compatible = "fsl,imx6q-audio-hdmi",
		"fsl,imx-audio-hdmi";
		model = "imx-audio-hdmi";
		hdmi-controller = <&hdmi_audio>;
	};

	v4l2_cap_0 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <0>;
		mclk_source = <0>;
		status = "okay";
	};

	v4l2_cap_1 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <1>;
		mclk_source = <0>;
		status = "okay";
	};               

	v4l2_out {
		compatible = "fsl,mxc_v4l2_output";
		status = "okay";
	};

	udoo_ard: udoo_ard_manager {
		compatible = "udoo,imx6q-udoo-ard";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_udoo_ard_alt>;
		bossac-clk-gpio   = <&gpio6 3 GPIO_ACTIVE_LOW>;
		bossac-dat-gpio   = <&gpio5 18 GPIO_ACTIVE_LOW>;
		bossac-erase-gpio = <&gpio4 21 GPIO_ACTIVE_LOW>;
		bossac-reset-gpio = <&gpio1 0 GPIO_ACTIVE_LOW>;
		status = "okay";
	};

	poweroff {
		compatible = "udoo,poweroff";
		pwr_5v_gpio = <&gpio2 4 GPIO_ACTIVE_LOW>;
	};
};

&audmux { 
	status = "okay";
};


&gpc { // General power controller
	/* use ldo-bypass, u-boot will check it and configure */
	fsl,ldo-bypass = <1>;
};

&hdmi_audio {
	status = "okay";
};

&hdmi_core {
	ipu_id = <0>;
	disp_id = <0>;
	status = "okay";
};

&hdmi_video {
	fsl,phy_reg_vlev = <0x0294>;
	fsl,phy_reg_cksymtx = <0x800d>;
	status = "okay";
};

&ldb { // LVDS display bridge
	status = "disabled";
	primary;
	lvds-channel@0 {
		reg = <0>;
		fsl,data-mapping = "spwg";
		status = "disabled";
		primary;
		crtc = "ipu1-di0";
	};
};

&i2c2 { // internal (hdmi)
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";
	
	hdmi: edid@50 {
		compatible = "fsl,imx6-hdmi-i2c";
		reg = <0x50>;
	};
};

&i2c3 { // CSI camera (CN11) and LVDS 7 inches touch panel (CN13)
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
	ov5640_mipi: ov5640_mipi@3c {
		compatible = "ovti,ov5640_mipi";
		reg = <0x3c>;
		clocks = <&clks IMX6QDL_CLK_CKO>;
		clock-names = "csi_mclk";
		pwn-gpios = <&gpio6 4 GPIO_ACTIVE_LOW>;
		rst-gpios = <&gpio6 5 GPIO_ACTIVE_HIGH>;
		csi_id = <0>;
		mclk = <24000000>;
		mclk_source = <0>;
	};
	touchscreen: st1232@55 {
		compatible = "sitronix,st1232";
		reg = <0x55>;
		interrupt-parent = <&gpio1>;
		interrupts = <13 IRQ_TYPE_LEVEL_LOW>;
		pinctrl-0 = <&pinctrl_st1232>;
		pinctrl-names = "default";
		gpios = <&gpio1 15 GPIO_ACTIVE_LOW>;
	};
};

&fec { //ethernet
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet>;
	phy-mode = "rgmii";
	phy-reset-gpios = <&gpio3 23 0>;
	phy-reset-duration = <50>;
	status = "okay";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog &external_hog>;
	
	imx6q-udoo {
		pinctrl_hog: hoggrp {
			fsl,pins = <
			// Internal GPIOs
			MX6QDL_PAD_NANDF_D4__GPIO2_IO04			0x80000000  // 5v enable
			MX6QDL_PAD_NANDF_CS0__GPIO6_IO11		0x80000000  // Vtt enable

			MX6QDL_PAD_DISP0_DAT5__GPIO4_IO26		0x80000000  // Debug UART (J18)
			
			MX6QDL_PAD_GPIO_17__GPIO7_IO12			0x80000000  // USB hub reset
			MX6QDL_PAD_NANDF_CS2__CCM_CLKO2			0x130b0     // USB hub clock
			MX6QDL_PAD_EIM_WAIT__GPIO5_IO00			0xb0b1      // USB OTG select
			
			MX6QDL_PAD_NANDF_D5__GPIO2_IO05			0x80000000  // SD card power
			MX6QDL_PAD_SD3_DAT5__GPIO7_IO00			0x80000000  // SD card detect
			
			MX6QDL_PAD_GPIO_16__GPIO7_IO11			0xb0b1      // SAM3X OTG vbus_en
			MX6QDL_PAD_SD4_DAT7__GPIO2_IO15			0x80000000  // SAM3X usb host
			MX6QDL_PAD_GPIO_3__GPIO1_IO03			0x30b1      // Arduino pinout pin 12
			
			MX6QDL_PAD_GPIO_2__GPIO1_IO02			0x80000000  // LVDS panel on (CN13)
			MX6QDL_PAD_GPIO_4__GPIO1_IO04			0x80000000  // LVDS backlight on (CN13)
			
			MX6QDL_PAD_CSI0_DAT18__GPIO6_IO04		0x1f071 	// CSI camera enable (CN11)
			MX6QDL_PAD_CSI0_DAT19__GPIO6_IO05		0x1f071 	// CSI camera reset (CN11)
			MX6QDL_PAD_CSI0_MCLK__CCM_CLKO1			0x130b0		// CSI master clock (CN11)
			
			>;
		};
		
		pinctrl_enet: enetgrp {
			fsl,pins = <
			MX6QDL_PAD_RGMII_RXC__RGMII_RXC			0x1b0b0
			MX6QDL_PAD_RGMII_RD0__RGMII_RD0			0x1b0b0
			MX6QDL_PAD_RGMII_RD1__RGMII_RD1			0x1b0b0
			MX6QDL_PAD_RGMII_RD2__RGMII_RD2			0x1b0b0
			MX6QDL_PAD_RGMII_RD3__RGMII_RD3			0x1b0b0
			MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL		0x1b0b0
			MX6QDL_PAD_RGMII_TXC__RGMII_TXC			0x1b0b0
			MX6QDL_PAD_RGMII_TD0__RGMII_TD0			0x1b0b0
			MX6QDL_PAD_RGMII_TD1__RGMII_TD1			0x1b0b0
			MX6QDL_PAD_RGMII_TD2__RGMII_TD2			0x1b0b0
			MX6QDL_PAD_RGMII_TD3__RGMII_TD3			0x1b0b0
			MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL		0x1b0b0
			MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK		0x1b0b0
			MX6QDL_PAD_ENET_MDIO__ENET_MDIO			0x1b0b0
			MX6QDL_PAD_ENET_MDC__ENET_MDC			0x1b0b0
			MX6QDL_PAD_EIM_D23__GPIO3_IO23			0x80000000 /* RGMII_nRST */
			MX6QDL_PAD_EIM_EB3__GPIO2_IO31			0x80000000  /* EN_ETH_PWR */
			>;
		};
		
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
			MX6QDL_PAD_EIM_D21__I2C1_SCL		0x4001b8b1
			MX6QDL_PAD_EIM_D28__I2C1_SDA		0x4001b8b1
			>;
		};
		
		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
			MX6QDL_PAD_KEY_COL3__I2C2_SCL		0x4001b8b1
			MX6QDL_PAD_KEY_ROW3__I2C2_SDA		0x4001b8b1
			>;
		};
		
		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
			MX6QDL_PAD_GPIO_5__I2C3_SCL		0x4001b8b1
			MX6QDL_PAD_GPIO_6__I2C3_SDA		0x4001b8b1
			>;
		};
		
		pinctrl_st1232: st1232grp {
			fsl,pins = <
			MX6QDL_PAD_SD2_DAT0__GPIO1_IO15			0x80000000  // Touch panel reset
			MX6QDL_PAD_SD2_DAT2__GPIO1_IO13			0x80000000  // Touch panel interrupt
			>;
		};
		
		pinctrl_uart2: uart2grp {
			fsl,pins = <
			MX6QDL_PAD_EIM_D26__UART2_TX_DATA	0x1b0b1
			MX6QDL_PAD_EIM_D27__UART2_RX_DATA	0x1b0b1
			>;
		};
		
		pinctrl_uart4: uart4grp {
			fsl,pins = <
			MX6QDL_PAD_KEY_COL0__UART4_TX_DATA 	0x1b0b1 // or 0x100b1
			MX6QDL_PAD_KEY_ROW0__UART4_RX_DATA 	0x1b0b1 // or 0x100b1
			>;
		};
		
		pinctrl_udoo_ard_alt: udooard2grp {
			fsl,pins = <
			MX6QDL_PAD_DISP0_DAT0__GPIO4_IO21       0x80000000
			MX6QDL_PAD_CSI0_DAT17__GPIO6_IO03       0x80000000
			MX6QDL_PAD_CSI0_PIXCLK__GPIO5_IO18      0x80000000
			MX6QDL_PAD_GPIO_0__GPIO1_IO00           0x80000000
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
			MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
			MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10059
			MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
			MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
			MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
			MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
			>;
		};

		ac97link_running: ac97link_runninggrp {
			fsl,pins = <
			MX6QDL_PAD_DI0_PIN2__AUD6_TXD   0x80000000
			MX6QDL_PAD_DI0_PIN3__AUD6_TXFS  0x80000000
			MX6QDL_PAD_DI0_PIN4__AUD6_RXD   0x80000000
			MX6QDL_PAD_DI0_PIN15__AUD6_TXC  0x80000000
			>;
		};
		
		ac97link_reset: ac97link_resetgrp {
			fsl,pins = <
			MX6QDL_PAD_EIM_EB2__GPIO2_IO30   0x80000000
			MX6QDL_PAD_DI0_PIN3__GPIO4_IO19  0x80000000
			MX6QDL_PAD_DI0_PIN2__GPIO4_IO18  0x80000000
			>;
		};
 	
 		ac97link_warm_reset: ac97link_warm_resetgrp {
			fsl,pins = <
			MX6QDL_PAD_DI0_PIN3__GPIO4_IO19  0x80000000
			>;
		};

	};
};

&ssi1 {
	fsl,mode = "ac97-slave";
	pinctrl-names = "default", "ac97-running", "ac97-reset", "ac97-warm-reset";
	pinctrl-0 = <&ac97link_running>;
	pinctrl-1 = <&ac97link_running>;
	pinctrl-2 = <&ac97link_reset>;
	pinctrl-3 = <&ac97link_warm_reset>;
	/* sync, sdata (output), reset */
	ac97-gpios = <&gpio4 19 0 &gpio4 18 0 &gpio2 30 0>;	
	status = "okay";
}; 

&uart2 { // iMX6 serial debug port - ttymxc1, available on micro USB CN6 (jumper J18 plugged)
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart4 { // iMX6-Arduino internal serial port - ttymxc3
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
};

&usdhc3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc3>;
	non-removable;
	keep-power-in-suspend;
	no-1-8-v;
	enable-sdio-wakeup;
	status = "okay";
};

&usbotg {
	pinctrl-names = "default";
	vbus-supply = <&reg_usb_otg_vbus>;
	status = "okay";
};

&usbh1 {
	vbus-supply = <&reg_usb_h1_vbus>;
	clocks = <&clks 201>;
	clock-names = "phy";
	status = "okay";
};

&mipi_csi {
   status = "okay";
   ipu_id = <0>;
   csi_id = <0>;
   v_channel = <0>;
   lanes = <2>;
};
